go.property("player_lives", 3)
go.property("score", 0)

local function game_over(self)
	print("game_over")
	msg.post("main:/game_loader#pause", "pause_from_game_over")
end

function init(self)
	self.player = factory.create("#player_spawner", vmath.vector3(512, 0, 0))
	timer.delay(5, false, function()
		factory.create("#enemy1_spawner", vmath.vector3(600, 440, 0))
		factory.create("#enemy1_spawner", vmath.vector3(625, 480, 0))
		factory.create("#enemy1_spawner", vmath.vector3(650, 520, 0))
	end)

	timer.delay(7, false, function()
		factory.create("#enemy1_spawner", vmath.vector3(600, 440, 0))
		factory.create("#enemy1_spawner", vmath.vector3(625, 480, 0))
		factory.create("#enemy1_spawner", vmath.vector3(650, 520, 0))
	end)

	timer.delay(8, false, function()
		factory.create("#enemy1_spawner", vmath.vector3(400, 440, 0))
	end)

	timer.delay(13, false, function()
		factory.create("#enemy1_spawner", vmath.vector3(500, 440, 0))
		factory.create("#enemy1_spawner", vmath.vector3(500, 480, 0))
		factory.create("#enemy1_spawner", vmath.vector3(500, 520, 0))
	end)
	
	timer.delay(15, false, function()
		factory.create("#enemy1_spawner", vmath.vector3(600, 440, 0))
		factory.create("#enemy1_spawner", vmath.vector3(625, 480, 0))
		factory.create("#enemy1_spawner", vmath.vector3(650, 520, 0))
	end)

	timer.delay(17, false, function()
		factory.create("#enemy1_spawner", vmath.vector3(400, 440, 0))
	end)
end


function on_message(self, message_id, message, sender)
	if message_id == hash("stop_input") then
		msg.post(self.player, "stop_input")
	end
	if message_id == hash("start_input") then
		msg.post(self.player, "start_input")
	end
	if message_id == hash("increase_score") then
		print("level controller script has received message to add score")
		print("score is", self.score)
		self.score = self.score + message.value
		msg.post("hud#hud", "set_score", {value = self.score})
	end
	if message_id == hash("change_life") then
		print("level controller script has received message to change life")
		print("life count is", self.player_lives)
		self.player_lives = self.player_lives + message.value
		msg.post("hud#hud", "set_lives", {value = self.player_lives})
		if self.player_lives <= 0 then
			game_over(self)
		end
	end
end